version: 0.2
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - docker
      - pwd
      - ls
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - IMAGE_URI="$REPOSITORY_URI:$TAG"  
  build:
    commands:
      - ls
      - pwd
      - echo Build started on `date`
      # - gatsby build
      - docker build
      - docker tag webservice "$IMAGE_URI"
      #- npm run build
  post_build:
    commands:
      #- gatsby serve
      - pwd
      - ls
      #- aws s3 cp --recursive --acl public-read public s3://gatsby-test123/
      #- aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/service-worker.js s3://test-pipeline-deploymentbucket-bekqcjpeiy5k/
      #- aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://test-pipeline-deploymentbucket-bekqcjpeiy5k/
      #- aws cloudfront create-invalidation --distribution-id E2HRLAR7ZA85XB --paths /*

      - docker push "$IMAGE_URI"
      - printf '[{"name":"${EnvironmentName}","imageUri":"%s"}]' "$IMAGE_URI" > images.json
  # artifacts:
  #   files: images.json




